version: "3.8"

services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    volumes:
      - ./api:/app
      - /app/node_modules
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - YOUTUBE_API_KEY=${YOUTUBE_API_KEY}
      - FALLBACK_LANGUAGE=${FALLBACK_LANGUAGE}
      - APP_PORT=${APP_PORT}
      - APP_ORIGIN=${APP_ORIGIN}
      - NODE_ENV=${NODE_ENV}
      - AI_API_URL=${AI_API_URL}
    depends_on:
      - videat-db
    command: sh -c "npx prisma migrate deploy && npm run start:dev"

  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    volumes:
      - ./web:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
      - API_URL=${API_URL}
    command: npm run dev

  ai:
    build:
      context: ./ai
      dockerfile: Dockerfile
    ports:
      - "5001:5000"
    environment:
      - AI_API_URL=${AI_API_URL}
    volumes:
      - ./ai:/app
      - ./ai/model_cache:/app/model_cache
    command: uvicorn main:app --host 0.0.0.0 --port 5000 --reload

  videat-db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      retries: 5
      start_period: 10s

volumes:
  postgres_data:
